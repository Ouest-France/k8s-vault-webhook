{{ $ca := genCA "svc-cat-ca" 3650 }}
{{ $svcName := include "k8s-vault-webhook.fullname" . }}
{{ $cn := printf "%s.%s.svc" $svcName .Release.Namespace }}
{{ $altName1 := printf "%s.cluster.local" $cn }}
{{ $altName2 := printf "%s" $cn }}
{{ $server := genSignedCert $cn nil (list $altName1 $altName2) 3650 $ca }}

apiVersion: v1
kind: List
metadata:
items:

- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ include "k8s-vault-webhook.fullname" . }}
    labels:
      {{- include "k8s-vault-webhook.labels" . | nindent 6 }}
  data:
    cert.pem: {{ b64enc $server.Cert }}
    key.pem: {{ b64enc $server.Key }}
    ca:  {{ b64enc $ca.Cert }}

- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    name: {{ include "k8s-vault-webhook.fullname" . }}
    labels:
      {{- include "k8s-vault-webhook.labels" . | nindent 6 }}
  webhooks:
  - name: secrets.{{ include "k8s-vault-webhook.fullname" . }}.webhook
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: {{ include "k8s-vault-webhook.fullname" . }}
        path: /secret
      caBundle: {{ b64enc $ca.Cert }}
    sideEffects: NoneOnDryRun
    rules:
    - operations:
      - CREATE
      - UPDATE
      apiGroups:
      - "*"
      apiVersions:
      - "*"
      resources:
      - secrets
    failurePolicy: {{ .Values.webhook.failurePolicy }}
    namespaceSelector:
    {{- if .Values.webhook.namespaceSelector.matchLabels }}
      matchLabels:
{{ toYaml .Values.webhook.namespaceSelector.matchLabels | indent 8 }}
    {{- end }}
      matchExpressions:
    {{- if .Values.webhook.namespaceSelector.matchExpressions }}
{{ toYaml .Values.webhook.namespaceSelector.matchExpressions | indent 6 }}
    {{- end }}
      - key: namespace
        operator: NotIn
        values:
        - {{ .Release.Namespace }}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: {{ include "k8s-vault-webhook.fullname" . }}
    labels:
      {{- include "k8s-vault-webhook.labels" . | nindent 6 }}
  spec:
    replicas: {{ .Values.replicaCount }}
    selector:
      matchLabels:
        {{- include "k8s-vault-webhook.selectorLabels" . | nindent 8 }}
    template:
      metadata:
        labels:
          {{- include "k8s-vault-webhook.selectorLabels" . | nindent 10 }}
      spec:
        serviceAccountName: {{ include "k8s-vault-webhook.serviceAccountName" . }}
        containers:
          - name: vault-agent
            image: "{{ .Values.vault.agent.image.repository }}:{{ .Values.vault.agent.image.tag }}"
            imagePullPolicy: {{ .Values.vault.agent.image.pullPolicy }}
            volumeMounts:
              - mountPath: /srv/vaultconfig
                name: vault-agent-config
              - mountPath: /srv/vaulttoken
                name: vault-token
            command: ["vault"]
            args: ["agent", "-config=/srv/vaultconfig/vault-agent.cfg"]
            resources:
              {{- toYaml .Values.vault.agent.resources | nindent 14 }}
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
              - name: KVW_CERT
                value: /srv/certificates/cert.pem
              - name: KVW_KEY
                value: /srv/certificates/key.pem
              - name: KVW_VAULT-ADDR
                value: {{ .Values.vault.address }}
              - name: KVW_VAULT-TOKEN
                value: /srv/vaulttoken/token
              - name: KVW_VAULT-PATTERN
                value: {{ .Values.vault.pattern | quote }}
              - name: KVW_LOGLEVEL
                value: {{ .Values.loglevel }}
              - name: KVW_LOGFORMAT
                value: {{ .Values.logformat }}
              - name: KVW_BASICAUTH
                value: {{ .Values.basicauth | join "," }}
            volumeMounts:
              - mountPath: /srv/certificates
                name: certificates
              - mountPath: /srv/vaulttoken
                name: vault-token
            ports:
              - name: https
                containerPort: 8443
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /status
                port: https
                scheme: HTTPS
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumes:
          - name: certificates
            secret:
              defaultMode: 420
              secretName: {{ template "k8s-vault-webhook.fullname" . }}
          - name: vault-agent-config
            configMap:
              name: {{ template "k8s-vault-webhook.fullname" . }}-vault-agent
          - name: vault-token
            emptyDir: {}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
      {{- end }}
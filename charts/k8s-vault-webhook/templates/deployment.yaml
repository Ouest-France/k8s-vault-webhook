apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-vault-webhook.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "k8s-vault-webhook.name" . }}
    helm.sh/chart: {{ include "k8s-vault-webhook.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "k8s-vault-webhook.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "k8s-vault-webhook.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount }}
      containers:
        - name: vault-agent
          image: vault:1.2.3
          volumeMounts:
            - mountPath: /srv/vaultconfig
              name: vault-agent-config
            - mountPath: /srv/vaulttoken
              name: vault-token
          command: ["vault"]
          args: ["agent", "-config=/srv/vaultconfig/vault-agent.cfg"]
          resources:
            {{- toYaml .Values.vault-agent.resources | nindent 12 }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KVW_CERT
              value: /srv/certificates/cert.pem
            - name: KVW_KEY
              value: /srv/certificates/key.pem
            - name: KVW_VAULT-ADDR
              value: {{ .Values.vault.address }}
            - name: KVW_VAULT-TOKEN
              value: /srv/vaulttoken/token
            - name: KVW_VAULT-PATTERN
              value: {{ .Values.vault.pattern | quote }}
            - name: KVW_LOGLEVEL
              value: {{ .Values.loglevel }}
          volumeMounts:
            - mountPath: /srv/certificates
              name: certificates
            - mountPath: /srv/vaulttoken
              name: vault-token
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /status
              port: http
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: certificates
          secret:
            defaultMode: 420
            secretName: {{ template "k8s-vault-webhook.fullname" . }}
        - name: vault-agent-config
          configMap:
            name: {{ template "k8s-vault-webhook.fullname" . }}-vault-agent
        - name: vault-token
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
